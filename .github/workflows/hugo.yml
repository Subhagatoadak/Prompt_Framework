name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger deployment on push to main branch (or change to your preferred branch)
  pull_request:
    branches:
      - main  # Trigger deployment on pull requests to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Using Ubuntu as the runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Conda
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'  # You can specify the version if needed
          auto-update-conda: true  # Ensure the latest version of Conda is installed

      # Step 3: Create and activate the Conda environment
      - name: Create and activate Conda environment
        run: |
          conda env update --file environment.yml --name base  # Create or update Conda environment from environment.yml
          conda activate base  # Activate the environment

      # Step 4: Install dependencies (if required)
      - name: Install Python dependencies
        run: |
          conda run -n base pip install .  # Install dependencies for your package

      # Step 5: Build the static content (Assuming you have documentation or site build commands)
      - name: Build the site (e.g., Sphinx or MkDocs)
        run: |
          # Example for building Sphinx docs
          conda run -n base sphinx-build docs/ docs/_build  # Replace this with your static site build process

      # Step 6: Configure Pages (Enable Pages if not enabled already)
      - name: Configure Pages
        uses: actions/configure-pages@v5
        with:
          build_dir: docs/_build  # Specify the directory where your built site is located (e.g., Sphinx's '_build' directory)

      # Step 7: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # Deploy to the 'gh-pages' branch (ensure this exists or is auto-created)
          folder: docs/_build  # Folder containing the built static content (replace with your build output folder)
